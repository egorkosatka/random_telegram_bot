from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton,\
    KeyboardButton, ReplyKeyboardMarkup

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage

import random
import vk_api
import sqlite3
import asyncio
import datetime

conn = sqlite3.connect('database.db')
cursor = conn.cursor()

date = datetime.datetime.now()
date_now = f'{date.year}-{date.month}-{date.day}'


bot = Bot(token='my bot token')
dp = Dispatcher(bot, storage=MemoryStorage())
vk_session = vk_api.VkApi('my telephone number', 'my password')
vk_session.auth()

vk = vk_session.get_api()

admins = []
participants = []

premium_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton('—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—èüîî'), KeyboardButton('–ø–æ–¥–ø–∏—Å–∫–∞üéÅ')).add(
    KeyboardButton('–∏–≥—Ä—ãüïπ')).add(
    KeyboardButton('—Ä—ã–Ω–æ–∫üõí')
)

game_bar_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton('–æ—Ä–µ–ª –∏ —Ä–µ—à–∫–∞üëë'),
    KeyboardButton('–¥–∞ –∏–ª–∏ –Ω–µ—Ç‚ú®')).add(
    KeyboardButton('–∫–∞–º–µ–Ω—å –Ω–æ–∂–Ω–∏—Ü—ã –±—É–º–∞–≥–∞‚úÇ')).add(
    KeyboardButton('‚óÄ–ú–µ–Ω—é')
)

standart_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton('–ö—É–ø–∏—Ç—å –ø—Ä–µ–ºüëë'))

try:
    cursor.execute('''ALTER TABLE user ADD subscription_date STRING''')
    conn.commit()
    cursor.execute('''ALTER TABLE user ADD concurses INT''')
    conn.commit()
    cursor.execute('''ALTER TABLE user ADD walls INT''')
    conn.commit()

    cursor.execute('''ALTER TABLE user ADD push INT''')
    conn.commit()
    cursor.execute('''ALTER TABLE user ADD subscription INT''')
    conn.commit()
    cursor.execute('''ALTER TABLE user ADD main INT''')
    conn.commit()
    cursor.execute('''CREATE TABLE user(telegram_id UNIQUE, attempts INT, rated INT, main INT, subscription INT, push INT, concurses INT, walls INT, subscription_date STRING)''')
    conn.commit()
except:
    pass


class Form(StatesGroup):
    sos = State()




@dp.message_handler(commands=['start', 'command', 'help'])
async def other_message(ms: types.Message):
    cursor.execute(f'''INSERT OR IGNORE INTO user(telegram_id, attempts, rated, main, subscription, push, concurses, walls) VALUES ({ms.from_user.id}, 0, 0, 1, 0, 0, 0, 5)''')
    subscription_status = cursor.execute(f'''SELECT subscription FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
    conn.commit()
    if subscription_status == 0:
        await bot.send_message(ms.from_user.id, 'Hi!', reply_markup=standart_keyboard)
        await bot.send_message(ms.from_user.id, '‚úÖ–ü—Ä–∏–≤–µ—Ç, —Ç—ã –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –±–æ—Ç—É —Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã: \n\n'

                                                'üé≤–†–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä\n'
                                                '‚îî/random 1 2 3 4 - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –¥–∞–Ω–Ω—ã–µ, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–æ–º, –∏ –æ–Ω –≤—ã–±–µ—Ä–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞!\n'
                                                '‚îîrandom hello - —Ç—ã –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ, –∏ –æ–Ω –≤—ã–±–µ—Ä–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –±—É–∫–≤—É!\n\n'
                                                
                                                
                                                'üìÅ–æ—Ç–ø—Ä–∞–≤–ª—è–π –±–æ—Ç—É —Ñ–∞–π–ª—ã!\n'
                                                '‚îî–û—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É —Ñ–∞–π–ª —Å–æ —Å–ª–æ–≤–∞–º–∏, –∏ –æ–Ω –≤—ã–±–µ—Ä–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ!\n\n'
                                                
                                                'üí¨–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏\n'
                                                '‚îî/vk domen post_id - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –∑–∞–ø—Ä–æ—Å, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –∏–º–µ–Ω–∏ –∞–≤—Ç–æ—Ä–∞ –ø–æ—Å—Ç–∞, –∏ –∏–∑ id –ø–æ—Å—Ç–∞, –∏ –æ–Ω –≤—ã–±–µ—Ä–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π!\n\n'
                                                
                                                
                                                '‚ùì–ó–∞–¥–∞–π –±–æ—Ç—É –≤–æ–ø—Ä–æ—Å!\n'
                                                '‚îî–ë–æ—Ç, —Ç—ã –ø—Ä–∞–≤–¥–∞ –±–æ—Ç?\n'
                                                '‚îî‚ùóÔ∏è–ü–∏—à–∏—Ç–µ –≤ –∫–æ–Ω—Ü–µ –≤–æ–ø—Ä–æ—Å–∞ "?", –∏–Ω–∞—á–µ –±–æ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç —ç—Ç–æ –∫–∞–∫ —Ñ—Ä–∞–∑—É!\n\n'
                                                
                                                
                                                'üèû–û—Ü–µ–Ω–∫–∞ —Ñ–æ—Ç–æ\n'
                                                '‚îî–û—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É –ª—é–±–æ–µ —Ñ–æ—Ç–æ(–Ω–µ –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç) –∏ –æ–Ω –µ–≥–æ –æ—Ü–µ–Ω–∏—Ç!\n\n\n'
                                                
                                                
                                                
                                                'üåüüåüüåü–ü–û–î–ü–ò–°–ö–êüåüüåüüåü\n\n'
                                                
                                                'üíµ—á—Ç–æ –¥–∞—ë—Ç –æ–±—ã—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞?\n'
                                                '‚îî–î–æ—Å—Ç—É–ø –∫ –º–∏–Ω–∏–∏–≥—Ä–∞–ºüïπ\n'
                                                '‚îî–¥–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏üîî\n\n'
                                                
                                                'üéÅ—á—Ç–æ –¥–∞—ë—Ç —Å–≤–µ—Ä—Ö–ø—Ä–µ–º –ø–æ–¥–ø–∏—Å–∫–∞?\n'
                                                '‚îî–ë–µ–∑–ª–∏–º–∏—Ç –Ω–∞ –ø–æ—Å—Ç—ã –≤ –í–öüåÑ\n'
                                                '‚îî–ü–æ–¥–ø–∏—Å–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –≥–æ–¥, –∞ –Ω–µ –º–µ—Å—è—Ü, –∫–∞–∫ –æ–±—ã—á–Ω–∞—èüéü\n'
                                                '‚îî–ë–µ–∑–ª–∏–º–∏—Ç –Ω–∞ –æ–±—å—ë–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤üìÅ\n\n'
                                                
                                                'PS.\n'
                                                '‚îî–í–∞—à —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å:\n'
                                                ' ‚îî–ü–æ—Å—Ç—ã –≤–∫: 55Ô∏è‚É£\n'
                                                ' ‚îî–û–±—å—ë–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞: –¥–æ 30 —Å–ª–æ–≤3Ô∏è‚É£0Ô∏è‚É£\n'
                                                ' ‚îî–º–æ–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å –ª–∏—à—å 10 —Ñ–æ—Ç–æ1Ô∏è‚É£0Ô∏è‚É£\n',
                                                reply_markup=InlineKeyboardMarkup().add(
                                                    InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–µ–º–∏—É–ºüëë', callback_data='oform_premium')
                                                ).add(
                                                    InlineKeyboardButton('–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—ÉüÜò', callback_data='nap_podderj')
                                                ))

    if subscription_status in [1, 2]:
        await bot.send_message(ms.from_user.id, '‚úÖ–ü—Ä–∏–≤–µ—Ç, —Ç—ã –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –±–æ—Ç—É —Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã: \n\n'

                                                'üé≤–†–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä\n'
                                                '‚îî/random 1 2 3 4 - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –¥–∞–Ω–Ω—ã–µ, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–æ–º, –∏ –æ–Ω –≤—ã–±–µ—Ä–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞!\n'
                                                '‚îîrandom hello - —Ç—ã –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ, –∏ –æ–Ω –≤—ã–±–µ—Ä–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –±—É–∫–≤—É!\n\n'
                                                
                                                
                                                'üìÅ–æ—Ç–ø—Ä–∞–≤–ª—è–π –±–æ—Ç—É —Ñ–∞–π–ª—ã!\n'
                                                '‚îî–û—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É —Ñ–∞–π–ª —Å–æ —Å–ª–æ–≤–∞–º–∏, –∏ –æ–Ω –≤—ã–±–µ—Ä–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ!\n\n'
                                                
                                                'üí¨–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏\n'
                                                '‚îî/vk domen post_id - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –∑–∞–ø—Ä–æ—Å, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –∏–º–µ–Ω–∏ –∞–≤—Ç–æ—Ä–∞ –ø–æ—Å—Ç–∞, –∏ –∏–∑ id –ø–æ—Å—Ç–∞, –∏ –æ–Ω –≤—ã–±–µ—Ä–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π!\n\n'
                                                
                                                
                                                '‚ùì–ó–∞–¥–∞–π –±–æ—Ç—É –≤–æ–ø—Ä–æ—Å!\n'
                                                '‚îî–ë–æ—Ç, —Ç—ã –ø—Ä–∞–≤–¥–∞ –±–æ—Ç?\n'
                                                '‚îî‚ùóÔ∏è–ü–∏—à–∏—Ç–µ –≤ –∫–æ–Ω—Ü–µ –≤–æ–ø—Ä–æ—Å–∞ "?", –∏–Ω–∞—á–µ –±–æ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç —ç—Ç–æ –∫–∞–∫ —Ñ—Ä–∞–∑—É!\n\n'
                                                
                                                
                                                'üèû–û—Ü–µ–Ω–∫–∞ —Ñ–æ—Ç–æ\n'
                                                '‚îî–û—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É –ª—é–±–æ–µ —Ñ–æ—Ç–æ(–Ω–µ –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç) –∏ –æ–Ω –µ–≥–æ –æ—Ü–µ–Ω–∏—Ç!\n\n\n'
                                                
                                                
                                                
                                                'üåüüåüüåü–ü–û–î–ü–ò–°–ö–êüåüüåüüåü\n\n'
                                                
                                                'üíµ—á—Ç–æ –¥–∞—ë—Ç –æ–±—ã—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞?\n'
                                                '‚îî–î–æ—Å—Ç—É–ø –∫ –º–∏–Ω–∏–∏–≥—Ä–∞–ºüïπ\n'
                                                '‚îî–¥–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏üîî\n\n'
                                                
                                                'üéÅ—á—Ç–æ –¥–∞—ë—Ç —Å–≤–µ—Ä—Ö–ø—Ä–µ–º –ø–æ–¥–ø–∏—Å–∫–∞?\n'
                                                '‚îî–ë–µ–∑–ª–∏–º–∏—Ç –Ω–∞ –ø–æ—Å—Ç—ã –≤ –í–öüåÑ\n'
                                                '‚îî–ü–æ–¥–ø–∏—Å–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –≥–æ–¥, –∞ –Ω–µ –º–µ—Å—è—Ü, –∫–∞–∫ –æ–±—ã—á–Ω–∞—èüéü\n'
                                                '‚îî–ë–µ–∑–ª–∏–º–∏—Ç –Ω–∞ –æ–±—å—ë–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤üìÅ\n\n'
                                                
                                                'PS.\n'
                                                '‚îî–í–∞—à —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å:\n'
                                                ' ‚îî–ü–æ—Å—Ç—ã –≤–∫: 55Ô∏è‚É£\n'
                                                ' ‚îî–û–±—å—ë–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞: –¥–æ 30 —Å–ª–æ–≤3Ô∏è‚É£0Ô∏è‚É£\n'
                                                ' ‚îî–º–æ–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å –ª–∏—à—å 10 —Ñ–æ—Ç–æ1Ô∏è‚É£0Ô∏è‚É£\n',
                               reply_markup=InlineKeyboardMarkup().add(
                                   InlineKeyboardButton('–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—ÉüÜò', callback_data='nap_podderj')
                               ))


@dp.message_handler()
async def othm(ms: types.Message):
    try:
        subscription_date_status = \
            cursor.execute(f'''SELECT subscription_date FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0].split('-')
        year = int(subscription_date_status[0])
        month = int(subscription_date_status[1])
        day = int(subscription_date_status[2])
        if date.day >= day:
            if date.month >= month or date.year > year:
                cursor.execute(f'''UPDATE user SET subscription_date="0" WHERE telegram_id={ms.from_user.id}''')
                cursor.execute(f'''UPDATE user SET subscription=0 WHERE telegram_id={ms.from_user.id}''')
                await bot.send_message(ms.from_user.id, '–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞‚è∞\n'
                                                        '–ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å, –≤–µ–¥—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–ª–∏—Ç—å –µ—ë –µ—â—ë '
                                                        '–Ω–∞ –º–µ—Å—è—Ü, –∏–ª–∏ –∫—É–ø–∏—Ç—å –Ω–æ–≤—É—é, –±–æ–ª–µ–µ –ª—É—á—à—É—é!', reply_markup=
                                       InlineKeyboardMarkup().add(
                                           InlineKeyboardButton('–ö—É–ø–∏—Ç—åüëë', callback_data='oform_premium')
                                       ))
                conn.commit()

    except:
        pass
    if '–ú–µ–Ω—é' in ms.text:
        prem_status = cursor.execute(f'''SELECT subscription FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
        if prem_status == 0:
            await bot.send_message(ms.from_user.id, '–ú–µ–Ω—é;', reply_markup=standart_keyboard)
        if prem_status in [1, 2]:
            await bot.send_message(ms.from_user.id, '–ú–µ–Ω—é;', reply_markup=premium_keyboard)
    if '/super' in ms.text:
        await ms.answer('–í—ã–±–µ—Ä–∏ –∫–ª–µ—Ç–∫—É: ', reply_markup=InlineKeyboardMarkup().add(
            InlineKeyboardButton('üü£', callback_data='neitral'),
            InlineKeyboardButton('üü£', callback_data='neitral'),
            InlineKeyboardButton('üü£', callback_data='neitral')).add(
            InlineKeyboardButton('üü£', callback_data='neitral'),
            InlineKeyboardButton('üü£', callback_data='neitral'),
            InlineKeyboardButton('üü£', callback_data='neitral')).add(
            InlineKeyboardButton('üü£', callback_data='neitral'),
            InlineKeyboardButton('üü£', callback_data='neitral'),
            InlineKeyboardButton('üü£', callback_data='neitral')))
    elif '–∏–≥—Ä—ã' in ms.text:
        subscription_status = \
            cursor.execute(f'''SELECT subscription FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
        if subscription_status in [1, 2]:
            await bot.send_message(ms.from_user.id, '–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä—ã: ', reply_markup=game_bar_keyboard)
        else:
            await bot.send_message(ms.from_user.id, '–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å–∞üò¢',
                                   reply_markup=InlineKeyboardMarkup().add(
                                       InlineKeyboardButton('–ö—É–ø–∏—Ç—å –ø—Ä–µ–ºüëë', callback_data='oform_premium')
                                   ))


    elif '/compet' in ms.text:
        ids = cursor.execute(f'''SELECT telegram_id FROM user''').fetchall()
        await ms.answer('–í—ã –æ–±—å—è–≤–∏–ª–∏ –∫–æ–Ω–∫—É—Ä—ÅüéÅ', reply_markup=InlineKeyboardMarkup().add(
            InlineKeyboardButton('—Ä–µ–∑—É–ª—å—Ç–∞—Çüëë', callback_data='results')
        ))
        for i in range(len(ids)):
            subscription_status = \
            cursor.execute(f'''SELECT subscription FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
            push_status = cursor.execute(f'''SELECT push FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
            if subscription_status not in [1, 2] and push_status != 0:
                await bot.send_message(ids[i][0], '–ö–û–ù–ö–£–†–° –ù–ê –ü–û–î–ü–ò–°–ö–òüåü!\n\n' + ms.text[8:],
                                       reply_markup=InlineKeyboardMarkup().add(
                                           InlineKeyboardButton('–Ø —É—á–∞—Å—Ç–≤—É—é!‚úÖ', callback_data='partic')).add(
                                           InlineKeyboardButton('–ù–µ —É–≤–µ–¥–æ–º–ª—è—Ç—å –æ –∫–æ–Ω–∫—É—Ä—Å–∞—Öüõë', callback_data='push_off')
                                       ))

    elif ms.text == '–æ—Ä–µ–ª –∏ —Ä–µ—à–∫–∞üëë' or ms.text == '–æ—Ä—ë–ª –∏ —Ä–µ—à–∫–∞üëë':
        subscription_status = \
        cursor.execute(f'''SELECT subscription FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
        if subscription_status in [1, 2]:
            rlist = ['–æ—Ä—ë–ªü¶Ö', '—Ä–µ—à–∫–∞üëë']
            result = random.choice(rlist)
            if '–æ—Ä—ë–ª' in result:
                await bot.send_message(ms.from_user.id, '–í–∞–º –≤—ã–ø–∞–ª ' + result)
            else:
                await bot.send_message(ms.from_user.id, '–í–∞–º –≤—ã–ø–∞–ª–∞ ' + result)
        else:
            await bot.send_message(ms.from_user.id, '–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å–∞üò¢',
                                   reply_markup=InlineKeyboardMarkup().add(
                                       InlineKeyboardButton('–ö—É–ø–∏—Ç—å –ø—Ä–µ–ºüëë', callback_data='oform_premium')
                                   ))
    elif '–¥–∞ –∏–ª–∏ –Ω–µ—Ç' in ms.text:
        subscription_status = \
        cursor.execute(f'''SELECT subscription FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
        if subscription_status in [1, 2]:
            rlist = ['–¥–∞‚úÖ', '–Ω–µ—Ç‚ùå']
            result = random.choice(rlist)
            await bot.send_message(ms.from_user.id, '–í–∞–º –≤—ã–ø–∞–ª–æ ' + result)
        else:
            await bot.send_message(ms.from_user.id, '–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å–∞üò¢',
                                   reply_markup=InlineKeyboardMarkup().add(
                                       InlineKeyboardButton('–ö—É–ø–∏—Ç—å –ø—Ä–µ–ºüëë', callback_data='oform_premium')
                                   ))
    elif '–∫–∞–º–µ–Ω—å –Ω–æ–∂–Ω–∏—Ü—ã –±—É–º–∞–≥–∞' in ms.text:
        status_id = cursor.execute(f'''SELECT subscription FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
        if status_id > 0:
            await bot.send_message(ms.from_user.id, 'üéå–ü–µ—Ä–≤—ã–º —Ö–æ–¥–∏—à—å —Ç—ã: ', reply_markup=
            InlineKeyboardMarkup().add(
                InlineKeyboardButton('–ö–∞–º–µ–Ω—åü•å', callback_data='camen')
            ).add(
                InlineKeyboardButton('–ù–æ–∂–Ω–∏—Ü—ã‚úÇ', callback_data='nojnic')
            ).add(
                InlineKeyboardButton('–ë—É–º–∞–≥–∞üìú', callback_data='bumag')
            ))
        else:
            await bot.send_message(ms.from_user.id, '–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å–∞üò¢',
                                   reply_markup=InlineKeyboardMarkup().add(
                                       InlineKeyboardButton('–ö—É–ø–∏—Ç—å –ø—Ä–µ–ºüëë', callback_data='oform_premium')
                                   ))

    if '—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—èüîî' in ms.text:
        status = cursor.execute(f'''SELECT push, main FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()
        on_concurse_push = InlineKeyboardMarkup().add(InlineKeyboardButton('—É–≤–µ–¥–æ–º–ª—è—Ç—å –æ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö‚úÖ', callback_data='push_on'))
        on_push = InlineKeyboardMarkup().add(
            InlineKeyboardButton('—É–≤–µ–¥–æ–º–ª—è—Ç—å –æ —Å–æ–±—ã—Ç–∏—è—Ö –≤ –±–æ—Ç–µ‚úÖ', callback_data='push_on'))


        if status[0] == 0 and status[1] in [0, 3]:

            await bot.send_message(ms.from_user.id, '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –±–æ—Ç–µ: üö´\n–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö: üö´', reply_markup=
            InlineKeyboardMarkup().add(
                InlineKeyboardButton('–£–≤–µ–¥–æ–º–ª—è—Ç—å –æ —Å–æ–±—ã—Ç–∏—è—Ö –≤ –±–æ—Ç–µ‚úÖ', callback_data='podpis')).add(
                InlineKeyboardButton('–£–≤–µ–¥–æ–º–ª—è—Ç—å –æ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö‚úÖ', callback_data='push_on')))
        if status[0] == 1 and status[1] in [0, 3]:
            await bot.send_message(ms.from_user.id, '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –±–æ—Ç–µ: üö´\n–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö: ‚úÖ', reply_markup=
            InlineKeyboardMarkup().add(
                InlineKeyboardButton('–£–≤–µ–¥–æ–º–ª—è—Ç—å –æ —Å–æ–±—ã—Ç–∏—è—Ö –≤ –±–æ—Ç–µ‚úÖ', callback_data='podpis')).add(
                InlineKeyboardButton('–ù–µ —É–≤–µ–¥–æ–º–ª—è—Ç—å –æ –∫–æ–Ω–∫—É—Ä—Å–∞—Öüö´', callback_data='push_off'))
                                   )
        if status[0] == 1 and status[1] == 1:
            await bot.send_message(ms.from_user.id, '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –±–æ—Ç–µ: ‚úÖ\n–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö: ‚úÖ', reply_markup=
            InlineKeyboardMarkup().add(
                InlineKeyboardButton('–ù–µ —É–≤–µ–¥–æ–º–ª—è—Ç—å –æ —Å–æ–±—ã—Ç–∏—è—Ö –≤ –±–æ—Ç–µüö´', callback_data='otpis')).add(
                InlineKeyboardButton('–ù–µ —É–≤–µ–¥–æ–º–ª—è—Ç—å –æ –∫–æ–Ω–∫—É—Ä—Å–∞—Öüö´', callback_data='push_off'))
                                   )
        if status[0] == 0 and status[1] == 1:
            await bot.send_message(ms.from_user.id, '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –±–æ—Ç–µ: ‚úÖ\n–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö: üö´', reply_markup=
            InlineKeyboardMarkup().add(
                InlineKeyboardButton('–ù–µ —É–≤–µ–¥–æ–º–ª—è—Ç—å –æ —Å–æ–±—ã—Ç–∏—è—Ö –≤ –±–æ—Ç–µüö´', callback_data='otpis')).add(
                InlineKeyboardButton('–£–≤–µ–¥–æ–º–ª—è—Ç—å –æ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö‚úÖ', callback_data='push_on'))
                                   )


    elif '–ø–æ–¥–ø–∏—Å–∫–∞üéÅ' in ms.text:
        subscription_date_status = \
            cursor.execute(f'''SELECT subscription_date FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
        posts = cursor.execute(f'''SELECT walls FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
        status = cursor.execute(f'''SELECT subscription FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
        if status == 0:
            await bot.send_message(ms.from_user.id, f'–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Çüö´\n\n–ü–æ—Å—Ç–æ–≤ –í–ö: {posts}üåÜ', reply_markup=
                                   InlineKeyboardMarkup().add(
                                       InlineKeyboardButton('–ö—É–ø–∏—Ç—å –ø—Ä–µ–ºüëë', callback_data='oform_premium')
                                   ))
        if status == 1:
            await bot.send_message(ms.from_user.id, f'–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏: –ü—Ä–µ–º–∏—É–º‚úÖ\n\n–û–∫–æ–Ω—á–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è: {subscription_date_status}üìÜ\n\n–ü–æ—Å—Ç–æ–≤ –í–ö: {posts}üåÜ', reply_markup=
                                   InlineKeyboardMarkup().add(
                                       InlineKeyboardButton('–ö—É–ø–∏—Ç—å —Å–≤–µ—Ä—Ö–ø—Ä–µ–ºüëë', callback_data='oform_premium')
                                   ))
        if status == 2:
            await bot.send_message(ms.from_user.id, f'–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏: –°–≤–µ—Ä—Ö–ø—Ä–µ–º–∏—É–ºüëë!\n\n–û–∫–æ–Ω—á–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è: {subscription_date_status}üìÜ\n\n'
                                                    f'–ü–æ—Å—Ç–æ–≤ –í–ö: {posts}üåÜ')
    elif '–ö—É–ø–∏—Ç—å –ø—Ä–µ–º' in ms.text:
        premium_status = \
        cursor.execute(f'''SELECT subscription FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
        if premium_status == 0 or premium_status == 3:
            await bot.send_message(ms.from_user.id, '‚úÖ–í—ã–±–µ—Ä–∏ —Ç–∞—Ä–∏—Ñ: ', reply_markup=InlineKeyboardMarkup().add(
                InlineKeyboardButton('–ü—Ä–µ–º–∏—É–º‚≠ê', callback_data='prem')).add(
                InlineKeyboardButton('–°–≤–µ—Ä—Ö –ø—Ä–µ–º–∏—É–ºüåü', callback_data='sverh_prem'))
                                   )
        if premium_status == 1:
            await bot.send_message(ms.from_user.id, '‚úÖ–í—ã–±–µ—Ä–∏ —Ç–∞—Ä–∏—Ñ: ', reply_markup=InlineKeyboardMarkup().add(
                InlineKeyboardButton('–°–≤–µ—Ä—Ö –ø—Ä–µ–º–∏—É–ºüåü', callback_data='sverh_prem')))

        if premium_status == 2:
            await bot.send_message(ms.from_user.id, '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π —Å–≤–µ—Ä—Ö–ø—Ä–µ–º–∏—É–º —Ç–∞—Ä–∏—Ñüëë')
    elif 'ofpr' in ms.text:
        await bot.send_message(ms.from_user.id,
                               '—É –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å–∞üò¢',
                               reply_markup=InlineKeyboardMarkup().add(
                                   InlineKeyboardButton('–ö—É–ø–∏—Ç—å –ø—Ä–µ–ºüëë', callback_data='oform_premium')
                               ))
    elif '/vk' in ms.text:
        if len(ms.text.split()) > 1:
            try:
                select_subscription = cursor.execute(f'''SELECT subscription FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
                walls = cursor.execute(f'''SELECT walls FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
                if select_subscription != 2 and walls <= 0:
                    await bot.send_message(ms.from_user.id, '–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏—à—å –ø–æ –µ–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–æ–π –æ–ø–ª–∞—Ç–µ, –∏–ª–∏ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Å–≤–µ—Ä—Ö–ø—Ä–µ–º–∞!',
                                           reply_markup=InlineKeyboardMarkup().add(
                                               InlineKeyboardButton('–ö—É–ø–∏—Ç—å –ø–æ—Å—Ç—ã –í–öüíµ', callback_data='buy_walls')
                                           ).add(
                                               InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–µ–º–∏—É–ºüëë', callback_data='oform_premium')
                                           ))
                elif select_subscription == 2 or walls > 0:
                    if select_subscription != 2:
                        walls = \
                        cursor.execute(f'''SELECT walls FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
                        cursor.execute(f'''UPDATE user SET walls={walls - 1} WHERE telegram_id={ms.from_user.id}''')

                    result = ms.text.split()
                    domen = result[1]
                    post_id = result[2]

                    vk_user_id = vk.utils.resolveScreenName(screen_name=domen)
                    res = vk.wall.getComments(owner_id=vk_user_id["object_id"], post_id=post_id, count=99)
                    r_list = []

                    for i in range(len(res['items'])):
                        r_list.append(res['items'][i])
                    r_comment = random.choice(r_list)

                    screen_name = vk.users.get(user_ids=r_comment['from_id'], fields='domain', name_case='nom')
                    await bot.send_message(ms.from_user.id, f'–°–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {r_comment["text"]}\n\n–ê–≤—Ç–æ—Ä: {screen_name[0]["first_name"]} {screen_name[0]["last_name"]}\n\n–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {walls} –ø–æ—Å—Ç–æ–≤!\n\nhttps://vk.com/{screen_name[0]["domain"]}')
                    conn.commit()
            except vk_api.exceptions.ApiError:
                await bot.send_message(ms.from_user.id, '–¢–∞–∫–æ–π –∑–∞–ø–∏—Å–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å—Ç–µ–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—èü§µ')
            except TypeError:
                await bot.send_message(ms.from_user.id, '–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!üö´')
        else:
            await bot.send_photo(chat_id=ms.from_user.id, photo='https://sun9-45.userapi.com/impg/75p6gZ6mDX_aIE0Zjnak8_8XIQAFcVMB1q3ZgA/6UH0r7l9d64.jpg?size=643x278&quality=96&proxy=1&sign=0602b861479bb8acd9e4a8e42b9060fa&type=album', caption='–ò—â–µ–º ID –ø–æ—Å—Ç–∞üîç')
            await bot.send_photo(chat_id=ms.from_user.id, photo='https://sun9-29.userapi.com/impg/LKb1ZaqmTOMX2yW2fgVEL5pR3HKZiTM7Kl15WA/LU3WeRtSM-o.jpg?size=491x210&quality=96&proxy=1&sign=79b9a4e3547a126dc950cb69512c1cc5&type=album', caption='–ò—â–µ–º ID –ø–æ—Å—Ç–∞üîç\n\n'
                                                                                                                                                                                                                                                    '–ö–æ–ø–∏—Ä—É–µ–º —ç—Ç–∏ —Ü–∏—Ñ—Ä—ã;')
            await bot.send_photo(chat_id=ms.from_user.id, photo='https://sun9-39.userapi.com/impg/EEybOsLVT1Mcsh-myCVS94isbSrlewZMDbF79g/_FF_WKWyezA.jpg?size=351x190&quality=96&proxy=1&sign=32078bc06a99708df74c28ca0172b8b8&type=album', caption='–°–æ—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å‚úè')

    elif ms.text == '/not_premium':
        cursor.execute(f'''UPDATE user SET subscription=0 WHERE telegram_id={ms.from_user.id}''')
        conn.commit()

    elif '/free_keyboard' in ms.text:
        await bot.send_message(ms.from_user.id, '.', reply_markup=standart_keyboard)


    elif ms.text == '/update_keyboard':
        ids = cursor.execute(f'''SELECT telegram_id FROM user''').fetchall()
        for i in range(len(ids)):
            subscription_status = \
                cursor.execute(f'''SELECT subscription FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
            if subscription_status in [1, 2]:
                await bot.send_message(ids[i][0], '–í–∞–º –ø—Ä–∏—à–ª–∏ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞üéÅ', reply_markup=premium_keyboard)
            if subscription_status == 0:
                await bot.send_message(ids[i][0], '–í–∞–º –ø—Ä–∏—à–ª–∏ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞üéÅ', reply_markup=standart_keyboard)
    elif '/mail' in ms.text:
        ids = cursor.execute(f'''SELECT telegram_id FROM user''').fetchall()
        for i in range(len(ids)):
            mail_status = cursor.execute(f'''SELECT main FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
            if mail_status == 1:
                await bot.send_message(ids[i][0], '–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –Ω–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ –±–æ—Ç–µ!\n\n' + ms.text[6:], reply_markup=InlineKeyboardMarkup().add(
                    InlineKeyboardButton('–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏‚ùå', callback_data='otpis')
                ))
            if mail_status == 0:
                await bot.send_message(ids[i][0], '–ê –≤—ã, —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏?\n\n',
                                       reply_markup=InlineKeyboardMarkup().add(
                                           InlineKeyboardButton('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É‚úÖ', callback_data='podpis')).add(
                                           InlineKeyboardButton('–ù–µ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –±–æ–ª—å—à–µüö´', callback_data='nopodpis')
                                       ))
    elif ms.text == '/rait':
        result = cursor.execute('''SELECT rated FROM user''').fetchall()
        rest = 0
        for i in range(len(result)):
            rest += result[i][0]

        rest = rest / len(result)
        await ms.reply(rest)

    elif '?' in ms.text or '‚ùì' in ms.text:
        val_list = ['–≤–æ–∑–º–æ–∂–Ω–æ', '—Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ', '–Ω–∞–≤–µ—Ä–Ω–æ–µ', '—Ç–æ—á–Ω–æ', '–∞–±—Å–æ–ª—é—Ç–Ω–æ —Ç–æ—á–Ω–æ!', '–Ω–µ—Ç', '—Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–µ—Ç!',
                    '–û—á–µ–Ω—å –∂–∞–ª—å, –Ω–æ —Ç–æ—á–Ω–æ –Ω–µ—Ç!', '—Ç–æ—á–Ω–æ –Ω–µ—Ç!', '–∞–±—Å–æ–ª—é—Ç–Ω–æ —Ç–æ—á–Ω–æ –Ω–µ—Ç!']
        smile = ['o(*Ôø£‚ñΩÔø£*)„Éñ', '(‚òûÔæü„ÉÆÔæü)‚òû', '(^‰∫∫^)', '(‚ù§ œâ ‚ù§)', '„ÉΩ(Ôø£œâÔø£„ÄÉ)„Çù', '(‚ìø_‚ìø)', '„Éæ(‚âß‚ñΩ‚â¶*)o', 'œà(ÔΩÄ‚àá¬¥)œà', '(¬¥‚ñΩ` É‚ô°∆™)']
        await bot.send_message(ms.from_user.id, random.choice(val_list) + random.choice(smile))

    elif '/random' in ms.text or '/—Ä–∞–Ω–¥–æ–º' in ms.text:
        random_list = ms.text[8:].split()
        subscription_status = \
            cursor.execute(f'''SELECT subscription FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
        if (subscription_status == 0 and len(random_list)) < 30 or (subscription_status == 1 and len(random_list) < 100) or subscription_status == 2:
            if len(random_list) == 0:
                await bot.send_message(ms.from_user.id, '–≠–π, –Ω–∞–ø–∏—à–∏ —Å—Ç—Ä–æ–∫—É –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∏—Å–µ–ª!üé≤\n\n–ü—Ä–∏–º–µ—Ä: /random 1 2 3 4')

            elif len(random_list) != 1:
                await bot.send_message(ms.from_user.id, random.choice(random_list))
                attempts = cursor.execute(f'''SELECT attempts FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[
                    0]
                cursor.execute(f'''UPDATE user SET attempts={attempts + 1} WHERE telegram_id={ms.from_user.id}''')
                conn.commit()
                attempts = cursor.execute(f'''SELECT attempts FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[
                    0]


                if attempts % 5 == 0:
                    rated = \
                    cursor.execute(f'''SELECT rated FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
                    if rated == 0:
                        await bot.send_message(ms.from_user.id,
                                               f'–ü—Ä–∏–≤–µ—Ç, —Ç—ã –ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –±–æ—Ç–æ–º —É–∂–µ {attempts} —Ä–∞–∑, –Ω–µ –º–æ–≥ –±—ã —Ç—ã –ø–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É –±–æ—Ç—É?',
                                               reply_markup=InlineKeyboardMarkup().add(
                                                   InlineKeyboardButton('‚≠ê', callback_data='oc_1')).add(
                                                   InlineKeyboardButton('‚≠ê‚≠ê', callback_data='oc_2')).add(
                                                   InlineKeyboardButton('‚≠ê‚≠ê‚≠ê', callback_data='oc_3')).add(
                                                   InlineKeyboardButton('‚≠ê‚≠ê‚≠ê‚≠ê', callback_data='oc_4')).add(
                                                   InlineKeyboardButton('‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê', callback_data='oc_5')))
                    else:
                        await bot.send_message(ms.from_user.id, '–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —É–∂–µ –¥–æ–ª–≥–æ–µ –≤—Ä–µ–º—è –ø–æ–ª—å–∑—É–µ—à—å—Å—è –±–æ—Ç–æ–º –∏ –ø–æ—Å—Ç–∞–≤–∏–ª –µ–º—É –æ—Ü–µ–Ω–∫—É!',
                                               reply_markup=InlineKeyboardMarkup().add(
                                                   InlineKeyboardButton('–£–±—Ä–∞—Ç—å –æ—Ü–µ–Ω–∫—É‚≠ê', callback_data='del_oc')
                                               ))
            else:
                random_list = list(random_list[0])
                await bot.send_message(ms.from_user.id, random.choice(random_list))

                attempts = cursor.execute(f'''SELECT attempts FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[
                    0]
                cursor.execute(f'''UPDATE user SET attempts={attempts + 1} WHERE telegram_id={ms.from_user.id}''')
                conn.commit()
                attempts = cursor.execute(f'''SELECT attempts FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[
                    0]

                if attempts % 5 == 0:
                    rated = \
                        cursor.execute(f'''SELECT rated FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
                    if rated == 0:
                        await bot.send_message(ms.from_user.id,
                                               f'–ü—Ä–∏–≤–µ—Ç, —Ç—ã –ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –±–æ—Ç–æ–º —É–∂–µ {attempts} —Ä–∞–∑, –Ω–µ –º–æ–≥ –±—ã —Ç—ã –ø–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É –±–æ—Ç—É?',
                                               reply_markup=InlineKeyboardMarkup().add(
                                                   InlineKeyboardButton('‚≠ê', callback_data='oc_1')).add(
                                                   InlineKeyboardButton('‚≠ê‚≠ê', callback_data='oc_2')).add(
                                                   InlineKeyboardButton('‚≠ê‚≠ê‚≠ê', callback_data='oc_3')).add(
                                                   InlineKeyboardButton('‚≠ê‚≠ê‚≠ê‚≠ê', callback_data='oc_4')).add(
                                                   InlineKeyboardButton('‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê', callback_data='oc_5')))
                    else:
                        await bot.send_message(ms.from_user.id,
                                               '–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —É–∂–µ –¥–æ–ª–≥–æ–µ –≤—Ä–µ–º—è –ø–æ–ª—å–∑—É–µ—à—å—Å—è –±–æ—Ç–æ–º –∏ –ø–æ—Å—Ç–∞–≤–∏–ª –µ–º—É –æ—Ü–µ–Ω–∫—É!',
                                               reply_markup=InlineKeyboardMarkup().add(
                                                   InlineKeyboardButton('–£–±—Ä–∞—Ç—å –æ—Ü–µ–Ω–∫—É‚≠ê', callback_data='del_oc')
                                               ))

        else:
            await bot.send_message(ms.from_user.id, '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏üö´', reply_markup=InlineKeyboardMarkup().add(
                                       InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–µ–º–∏—É–ºüëë', callback_data='oform_premium')))

    if '—Ä—ã–Ω–æ–∫' in ms.text:
        subscription_status = cursor.execute(f'''SELECT subscription FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]
        if subscription_status != 2:
            await ms.answer('üÜï–†–´–ù–û–öüÜï\n\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–∫—É–ø–∞—Ç—å –∏ –æ–±–º–µ–Ω–∏–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏üéÅ', reply_markup=
                            InlineKeyboardMarkup().add(
                                InlineKeyboardButton('–ö—É–ø–∏—Ç—å –ø—Ä–µ–ºüëë', callback_data='oform_premium')).add(
                                InlineKeyboardButton('–ö—É–ø–∏—Ç—å –ø–æ—Å—Ç—ã –í–öüó∫', callback_data='buy_walls')).add(
                                InlineKeyboardButton('üÜï–û–±–º–µ–Ω –ø–æ—Å—Ç–æ–≤ –Ω–∞ –ø—Ä–µ–ºüëë', callback_data='walls_prem')
                            ))
        if subscription_status == 2:
            await ms.answer('–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Ä—ã–Ω–∫–∞(—É –≤–∞—Å —Å–≤–µ—Ä—Ö–ø—Ä–µ–º–∏—É–º —Ç–∞—Ä–∏—Ñ)‚ùó')
@dp.message_handler(content_types=types.ContentType.DOCUMENT)
async def send_document(ms: types.Message):

    subscription_status = \
    cursor.execute(f'''SELECT subscription FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]

    file_id = ms.document.file_id
    file = await bot.get_file(file_id)
    file_path = file.file_path
    await bot.send_message(ms.from_user.id, '–ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ªüìÅ')

    try:
        await bot.download_file(file_path, "doc.txt")
        doc = open('doc.txt', 'rb')
        result = doc.read().decode('utf-8').split()
        if subscription_status == 0 and len(result) < 30:
            doc = open('doc.txt', 'rb')
            await bot.send_message(ms.from_user.id, '–¢–µ–∫—Å—Ç —Ñ–∞–π–ª–∞: \n' + doc.read().decode('utf-8'))
            await bot.send_message(ms.from_user.id, random.choice(result))

        elif len(result) > 30 and len(result) < 100 and subscription_status == 1:
            await bot.send_message(ms.from_user.id, random.choice(result))

        elif len(result) > 100 and subscription_status in [0, 1]:
            await bot.send_message(ms.from_user.id,
                                   '–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å –±–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ —Å–≤–µ—Ä—Ö–ø—Ä–µ–ºüëë –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏!üö´\n', reply_markup=
                                   InlineKeyboardMarkup().add(
                                       InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–µ–º–∏—É–ºüëë', callback_data='oform_premium')))
        elif len(result) > 30 and len(result) < 100 and subscription_status == 0:
            await bot.send_message(ms.from_user.id, '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏üö´\n'
                                                    '–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª —Å –Ω–µ –±–æ–ª–µ–µ 30 —Å–ª–æ–≤–∞–º–∏!', reply_markup=
                                   InlineKeyboardMarkup().add(
                                       InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–µ–º–∏—É–ºüëë', callback_data='oform_premium')))

        elif subscription_status == 2:
            await bot.send_message(ms.from_user.id, random.choice(result))


    except:
        doc = open('doc.txt', 'rb')
        result = doc.read().decode('utf-8').split()
        if subscription_status == 2:
            await bot.send_message(ms.from_user.id, '‚ùó–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π, –ø–æ—ç—Ç–æ–º—É —Ç–µ–ª–µ–≥—Ä–∞–º –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç '
                                                    '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç;')
            await bot.send_message(ms.from_user.id, random.choice(result))
        else:
            await bot.send_message(ms.from_user.id, '–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å –±–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ —Å–≤–µ—Ä—Ö–ø—Ä–µ–ºüëë –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏!üö´\n', reply_markup=
            InlineKeyboardMarkup().add(InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–µ–º–∏—É–ºüëë', callback_data='oform_premium')))

@dp.message_handler(content_types=types.ContentType.PHOTO)
async def send_document(ms: types.Message):

    subscription_status = \
    cursor.execute(f'''SELECT subscription FROM user WHERE telegram_id={ms.from_user.id}''').fetchone()[0]

    if subscription_status in [1, 2]:
        eval_list = ['10/10, –±–æ–º–±–∞üí£üîû', '9/10, –ø–æ—á—Ç–∏ –±–æ–º–±–∞üîâ', '8/10, —á–µ–ª —Ç—ã....', '7/10, –±–ª–∏–∂–µ –∫ 6Ô∏è‚É£', '6Ô∏è‚É£/üîü, —Å—Ç—Ä—ë–º–Ω—ã–π —Ç–∏–ø, –Ω–æ —Å –ª–∏–º–æ–Ω–∞–¥–æ–º –Ω–æ—Ä–ºü•§',
                     '5/10, —Ñ–∏–≥–Ω—èüôâ', '4/10 –Ω—É—É—É—É...–¢—É—Ç –¥–∞–∂–µ —Å –ª–∏–º–æ–Ω–∞–¥–æ–º –Ω–µ —Å—Ç—Ä—ë–º–Ω–æü•§üö´', '3/10 ,—Ç–æ –∂–µ —Å–∞–º–æ–µ —á—Ç–æ –∏ 2/10', '1/10, '
                                                                                                                   '–ù–∞—Å—Ç–æ–ª—å–∫–æ –ø–ª–æ—Ö–æ, —á—Ç–æ –¥–∞–∂–µ —Ö–æ—Ä–æ—à–æ‚úÖ']
        eval_value = random.choice(eval_list)
        file = await bot.get_file(ms.photo[0].file_id)
        file_path = file.file_path
        await bot.download_file(file_path, "photo.jpg")
        doc = open('photo.jpg', 'rb')
        await bot.send_photo(chat_id=ms.from_user.id, photo=doc, caption=eval_value)


@dp.callback_query_handler(lambda c: True)
async def callback(c):

    if c.data in ['bumag', 'nojnic', 'camen']:
        user_value = c.data
        if user_value == 'bumag':
            user_value = '–±—É–º–∞–≥–∞üìú'
        elif user_value == 'nojnic':
            user_value = '–Ω–æ–∂–Ω–∏—Ü—ã‚úÇ'
        elif user_value == 'camen':
            user_value = '–∫–∞–º–µ–Ω—åü•å'
        r_value = random.choice(['–∫–∞–º–µ–Ω—åü•å', '–Ω–æ–∂–Ω–∏—Ü—ã‚úÇ', '–±—É–º–∞–≥–∞üìú'])
        if r_value == user_value:
            await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text=f'–¢—ã –≤—ã–±—Ä–∞–ª {user_value}\n\n–ë–æ—Ç –≤—ã–±—Ä–∞–ª {r_value}\n\n–ù–ò–ß–¨–Ø!üëÅ‚Äç', reply_markup=
                                   InlineKeyboardMarkup().add(
                                       InlineKeyboardButton('üîÑ–ü–µ—Ä–µ–∏–≥—Ä–∞—Ç—å', callback_data='replay_in_knb')
                                   ))
        if user_value == '–∫–∞–º–µ–Ω—åü•å' and r_value == '–±—É–º–∞–≥–∞üìú':
            await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                        text=f'–¢—ã –≤—ã–±—Ä–∞–ª {user_value}\n\n–ë–æ—Ç –≤—ã–±—Ä–∞–ª {r_value}\n\n–ë–û–¢ –ü–û–ë–ï–î–ò–õ!ü§ñüèÜ',
                                        reply_markup=
                                        InlineKeyboardMarkup().add(
                                            InlineKeyboardButton('üîÑ–ü–µ—Ä–µ–∏–≥—Ä–∞—Ç—å', callback_data='replay_in_knb')))
        if user_value == '–∫–∞–º–µ–Ω—åü•å' and r_value == '–Ω–æ–∂–Ω–∏—Ü—ã‚úÇ':
            await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                        text=f'–¢—ã –≤—ã–±—Ä–∞–ª {user_value}\n\n–ë–æ—Ç –≤—ã–±—Ä–∞–ª {r_value}\n\n–í–´ –ü–û–ë–ï–î–ò–õ–ò!ü•áüèÜ',
                                        reply_markup=
                                        InlineKeyboardMarkup().add(
                                            InlineKeyboardButton('üîÑ–ü–µ—Ä–µ–∏–≥—Ä–∞—Ç—å', callback_data='replay_in_knb')))
        if user_value == '–±—É–º–∞–≥–∞üìú' and r_value == '–∫–∞–º–µ–Ω—åü•å':
            await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                        text=f'–¢—ã –≤—ã–±—Ä–∞–ª {user_value}\n\n–ë–æ—Ç –≤—ã–±—Ä–∞–ª {r_value}\n\n–í–´ –ü–û–ë–ï–î–ò–õ–ò!ü•áüèÜ',
                                        reply_markup=
                                        InlineKeyboardMarkup().add(
                                            InlineKeyboardButton('üîÑ–ü–µ—Ä–µ–∏–≥—Ä–∞—Ç—å', callback_data='replay_in_knb')))
        if user_value == '–±—É–º–∞–≥–∞üìú' and r_value == '–Ω–æ–∂–Ω–∏—Ü—ã‚úÇ':
            await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                        text=f'–¢—ã –≤—ã–±—Ä–∞–ª {user_value}\n\n–ë–æ—Ç –≤—ã–±—Ä–∞–ª {r_value}\n\n–ë–û–¢ –ü–û–ë–ï–î–ò–õ!ü§ñüèÜ',
                                        reply_markup=
                                        InlineKeyboardMarkup().add(
                                            InlineKeyboardButton('üîÑ–ü–µ—Ä–µ–∏–≥—Ä–∞—Ç—å', callback_data='replay_in_knb')))
        if user_value == '–Ω–æ–∂–Ω–∏—Ü—ã‚úÇ' and r_value == '–±—É–º–∞–≥–∞üìú':
            await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                        text=f'–¢—ã –≤—ã–±—Ä–∞–ª {user_value}\n\n–ë–æ—Ç –≤—ã–±—Ä–∞–ª {r_value}\n\n–í–´ –ü–û–ë–ï–î–ò–õ–ò!ü•áüèÜ',
                                        reply_markup=
                                        InlineKeyboardMarkup().add(
                                            InlineKeyboardButton('üîÑ–ü–µ—Ä–µ–∏–≥—Ä–∞—Ç—å', callback_data='replay_in_knb')))
        if user_value == '–Ω–æ–∂–Ω–∏—Ü—ã‚úÇ' and r_value == '–∫–∞–º–µ–Ω—åü•å':
            await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                        text=f'–¢—ã –≤—ã–±—Ä–∞–ª {user_value}\n\n–ë–æ—Ç –≤—ã–±—Ä–∞–ª {r_value}\n\n–ë–û–¢ –ü–û–ë–ï–î–ò–õ!ü§ñüèÜ',
                                        reply_markup=
                                        InlineKeyboardMarkup().add(
                                            InlineKeyboardButton('üîÑ–ü–µ—Ä–µ–∏–≥—Ä–∞—Ç—å', callback_data='replay_in_knb')))

    if c.data == 'replay_in_knb':
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='üéå–ü–µ—Ä–≤—ã–º —Ö–æ–¥–∏—à—å —Ç—ã: ', reply_markup=
        InlineKeyboardMarkup().add(
            InlineKeyboardButton('–ö–∞–º–µ–Ω—åü•å', callback_data='camen')
        ).add(
            InlineKeyboardButton('–ù–æ–∂–Ω–∏—Ü—ã‚úÇ', callback_data='nojnic')
        ).add(
            InlineKeyboardButton('–ë—É–º–∞–≥–∞üìú', callback_data='bumag')
        ))
    if c.data == 'oform_premium':
        premium_status = cursor.execute(f'''SELECT subscription FROM user WHERE telegram_id={c.from_user.id}''').fetchone()[0]
        if premium_status == 0 or premium_status == 3:
            await bot.send_message(c.from_user.id, '‚úÖ–í—ã–±–µ—Ä–∏ —Ç–∞—Ä–∏—Ñ: ', reply_markup=InlineKeyboardMarkup().add(
                InlineKeyboardButton('–ü—Ä–µ–º–∏—É–º‚≠ê', callback_data='prem')).add(
                InlineKeyboardButton('–°–≤–µ—Ä—Ö –ø—Ä–µ–º–∏—É–ºüåü', callback_data='sverh_prem'))
                                   )
        if premium_status == 1:
            await bot.send_message(c.from_user.id, '‚úÖ–í—ã–±–µ—Ä–∏ —Ç–∞—Ä–∏—Ñ: ', reply_markup=InlineKeyboardMarkup().add(
                InlineKeyboardButton('–°–≤–µ—Ä—Ö –ø—Ä–µ–º–∏—É–ºüåü', callback_data='sverh_prem')))

        if premium_status == 2:
            await bot.send_message(c.from_user.id, '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π —Å–≤–µ—Ä—Ö–ø—Ä–µ–º–∏—É–º —Ç–∞—Ä–∏—Ñüëë')

    if c.data == 'oform—É_premium':
        premium_status = \
        cursor.execute(f'''SELECT subscription FROM user WHERE telegram_id={c.from_user.id}''').fetchone()[0]
        if premium_status == 0 or premium_status == 3:
            await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='‚úÖ–í—ã–±–µ—Ä–∏ —Ç–∞—Ä–∏—Ñ: ', reply_markup=InlineKeyboardMarkup().add(
                InlineKeyboardButton('–ü—Ä–µ–º–∏—É–º‚≠ê', callback_data='prem')).add(
                InlineKeyboardButton('–°–≤–µ—Ä—Ö –ø—Ä–µ–º–∏—É–ºüåü', callback_data='sverh_prem'))
                                   )
        if premium_status == 1:
            await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='‚úÖ–í—ã–±–µ—Ä–∏ —Ç–∞—Ä–∏—Ñ: ', reply_markup=InlineKeyboardMarkup().add(
                InlineKeyboardButton('–°–≤–µ—Ä—Ö –ø—Ä–µ–º–∏—É–ºüåü', callback_data='sverh_prem')
            ))

        else:
            await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π —Å–≤–µ—Ä—Ö–ø—Ä–µ–º–∏—É–º —Ç–∞—Ä–∏—Ñüëë')
    if c.data == 'prem':
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–¢–∞—Ä–∏—Ñ: –ø—Ä–µ–º–∏—É–º‚≠ê\n\n'
                                                                                             '–î–æ–ø. —Ñ—É–Ω–∫—Ü–∏–∏: ‚úÖ\n'
                                                                                             '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤–∫: üö´\n\n'
                                                                                                  'ùôãùôçùôÑùòæùôÄ: 30p', reply_markup=InlineKeyboardMarkup().add(
            InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Ç–∞—Ä–∏—ÑüîÑ', callback_data='oform—É_premium')
        ).add(
                                        InlineKeyboardButton('–ö—É–ø–∏—Ç—åüõí', callback_data='buy_premium')
                                    ))
    if c.data == 'sverh_prem':
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–¢–∞—Ä–∏—Ñ: —Å–≤–µ—Ä—Ö-–ø—Ä–µ–º–∏—É–ºüåü\n\n'
                                                                                                  '–î–æ–ø. —Ñ—É–Ω–∫—Ü–∏–∏: ‚úÖ\n'
                                                                                                  '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤–∫: ‚úÖ\n\n'
                                                                                                  'ùôãùôçùôÑùòæùôÄ: 100p',
                                    reply_markup=InlineKeyboardMarkup().add(
                                        InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Ç–∞—Ä–∏—ÑüîÑ', callback_data='oform—É_premium')
                                    ).add(
                                        InlineKeyboardButton('–ö—É–ø–∏—Ç—åüõí', callback_data='buy_sverh_premium')
                                    ))

    if c.data == 'buy_sverh_premium':
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Åüï•')
        await asyncio.sleep(1)
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                    text='–ü–æ–∫—É–ø–∞–µ–º –ª–∏—á–Ω—ã–π —Å–∞–º–æ–ª—ë—Çüõ©')
        await asyncio.sleep(1)
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                    text='–ü—å—ë–º —Å–∞–º—ã–π –¥–æ—Ä–æ–≥–æ–π –ª–∏–∫—ë—Äü•É')
        await asyncio.sleep(1)
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                    text='–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–≤–µ—Ä—Ö–ø—Ä–µ–º–∏—É–º –ø—Ä–µ–º–∏—É–ºüëë')
        await asyncio.sleep(1)
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–ì–æ—Ç–æ–≤–æ‚úÖ\n–¢–µ–ø–µ—Ä—å –≤–∞–º'
                                                                                                  ' –¥–æ—Å—Ç—É–ø–Ω—ã –∞–±—Å–æ–ª—é—Ç–Ω–æ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞!')
        await bot.send_message(c.from_user.id, '–í–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Å–≤–µ—Ä—Ö –ø—Ä–µ–º —Ñ—É–Ω–∫—Ü–∏–∏üëë', reply_markup=premium_keyboard)
        cursor.execute(f'''UPDATE user SET subscription=2 WHERE telegram_id={c.from_user.id}''')
        if date.month == 12:
            date_next_month = f'{date.year}-1-{date.day}'
        else:
            date_next_month = f'{date.year}-{date.month + 1}-{date.day}'
        cursor.execute(f'''UPDATE user SET subscription_date='{date_next_month}' WHERE telegram_id={c.from_user.id}''')
        conn.commit()
    if c.data == 'buy_premium':
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Åüï•')
        await asyncio.sleep(1)
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                    text='–í–æ—Ä—É–µ–º –¥–µ–Ω—å–≥–∏ —Å –æ–±–µ–¥–æ–≤ü•òüíµ')
        await asyncio.sleep(1)
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–í–æ—Ä—É–µ–º –¥–µ–Ω—å–≥–∏ —Å –∫–∞—Ä—Çüí≥')
        await asyncio.sleep(1)
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø—Ä–µ–º–∏—É–ºüëë')
        await asyncio.sleep(1)
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–ì–æ—Ç–æ–≤–æ‚úÖ\n–¢–µ–ø–µ—Ä—å –≤–∞–º'
                                                                                                  ' –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ—á—Ç–∏ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞!')
        await bot.send_message(c.from_user.id, '–í–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã VIP —Ñ—É–Ω–∫—Ü–∏–∏üëë', reply_markup=premium_keyboard)
        cursor.execute(f'''UPDATE user SET subscription=1 WHERE telegram_id={c.from_user.id}''')
        if date.month == 12:
            date_next_month = f'{date.year}-1-{date.day}'
        else:
            date_next_month = f'{date.year}-{date.month + 1}-{date.day}'
        cursor.execute(f'''UPDATE user SET subscription_date='{date_next_month}' WHERE telegram_id={c.from_user.id}''')
        conn.commit()
    if c.data == 'free_premium':
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø—Ä–µ–º–∏—É–ºüëë')
        await asyncio.sleep(1)
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–ì–æ—Ç–æ–≤–æ‚úÖ\n–¢–µ–ø–µ—Ä—å –≤–∞–º'
                                                                                                  ' –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞!')
        await bot.send_message(c.from_user.id, '–í–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã VIP —Ñ—É–Ω–∫—Ü–∏–∏üëë', reply_markup=premium_keyboard)
        cursor.execute(f'''UPDATE user SET subscription=1 WHERE telegram_id={c.from_user.id}''')
        conn.commit()

    if c.data == 'partic':
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                    text='–í—ã —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–µ‚úÖ\n\n', reply_markup=
                                    InlineKeyboardMarkup().add(
                                        InlineKeyboardButton('–ù–µ —É–≤–µ–¥–æ–º–ª—è—Ç—å –æ –∫–æ–Ω–∫—É—Ä—Å–∞—Öüõë', callback_data='push_off')
                                    ))
        cursor.execute(f'''UPDATE user SET concurses=1 WHERE telegram_id={c.from_user.id}''')
        conn.commit()

    if c.data == 'push_off':
        cursor.execute(f'''UPDATE user SET push=0 WHERE telegram_id={c.from_user.id}''')
        conn.commit()
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                    text='–í–∞–º –±–æ–ª—å—à–µ –Ω–µ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ'
                                         ' —Ç–µ–∫—É—â–∏—Ö –∫–æ–Ω–∫—É—Ä—Å–∞—Ö;\n\n‚òë', reply_markup=
                                    InlineKeyboardMarkup().add(
                                        InlineKeyboardButton('—É–≤–µ–¥–æ–º–ª—è—Ç—å –æ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö‚úÖ', callback_data='push_on')
                                    ))
    if c.data == 'push_on':
        cursor.execute(f'''UPDATE user SET push=1 WHERE telegram_id={c.from_user.id}''')
        conn.commit()
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                    text='–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –∑–Ω–∞—Ç—å –æ'
                                         ' —Ç–µ–∫—É—â–∏—Ö –∫–æ–Ω–∫—É—Ä—Å–∞—Ö‚úÖ;\n\n')
    if c.data == 'nopodpis':
        cursor.execute(f'''UPDATE user SET main=3 WHERE telegram_id={c.from_user.id}''')
        conn.commit()
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                    text='–ú—ã –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ–º –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –≤–∞–º —Ä–∞—Å—Å—ã–ª–∫—É‚òë', reply_markup=
                                    InlineKeyboardMarkup().add(
                                        InlineKeyboardButton('–°–¢–û–ü! –û–¢–ú–ï–ù–ê!üò©', callback_data='podpis')
                                    ))
    if c.data == 'otpis':
        cursor.execute(f'''UPDATE user SET main=0 WHERE telegram_id={c.from_user.id}''')
        conn.commit()
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏!‚ùå', reply_markup=InlineKeyboardMarkup().add(
                                           InlineKeyboardButton('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É‚úÖ', callback_data='podpis')).add(
                                           InlineKeyboardButton('–ù–µ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –±–æ–ª—å—à–µüö´', callback_data='nopodpis')
                                       ))
    if c.data == 'podpis':
        cursor.execute(f'''UPDATE user SET main=1 WHERE telegram_id={c.from_user.id}''')
        conn.commit()
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É‚úÖ', reply_markup=InlineKeyboardMarkup().add(
                    InlineKeyboardButton('–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏‚ùå', callback_data='otpis')))

    if c.data == 'del_oc':
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                    text='–í—ã —É–¥–∞–ª–∏–ª–∏ —Å–≤–æ—é –æ—Ü–µ–Ω–∫—É‚úîüå†')
        cursor.execute(f'''UPDATE user SET rated=0 WHERE telegram_id={c.from_user.id}''')
        conn.commit()
    if c.data in ['oc_1', 'oc_2', 'oc_3', 'oc_4', 'oc_5']:
        rated = cursor.execute(f'''SELECT rated FROM user WHERE telegram_id={c.from_user.id}''').fetchone()[0]
        if rated == 0:
            if c.data == 'oc_1':
                await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–í–∞—à –≥–æ–ª–æ—Å –ø—Ä–∏–Ω—è—Ç: ‚≠ê')
                cursor.execute(f'''UPDATE user SET rated=1 WHERE telegram_id={c.from_user.id}''')
                conn.commit()
            if c.data == 'oc_2':
                await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–í–∞—à –≥–æ–ª–æ—Å –ø—Ä–∏–Ω—è—Ç: ‚≠ê‚≠ê')
                cursor.execute(f'''UPDATE user SET rated=2 WHERE telegram_id={c.from_user.id}''')
                conn.commit()
            if c.data == 'oc_3':
                await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–í–∞—à –≥–æ–ª–æ—Å –ø—Ä–∏–Ω—è—Ç: ‚≠ê‚≠ê‚≠ê')
                cursor.execute(f'''UPDATE user SET rated=3 WHERE telegram_id={c.from_user.id}''')
                conn.commit()
            if c.data == 'oc_4':
                await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–í–∞—à –≥–æ–ª–æ—Å –ø—Ä–∏–Ω—è—Ç: ‚≠ê‚≠ê‚≠ê‚≠ê')
                cursor.execute(f'''UPDATE user SET rated=4 WHERE telegram_id={c.from_user.id}''')
                conn.commit()
            if c.data == 'oc_5':
                await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–í–∞—à –≥–æ–ª–æ—Å –ø—Ä–∏–Ω—è—Ç: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê')
                cursor.execute(f'''UPDATE user SET rated=5 WHERE telegram_id={c.from_user.id}''')
                conn.commit()

        else:
            await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                        text='–í—ã —É–∂–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ —Å–≤–æ—é –æ—Ü–µ–Ω–∫—É!')
    if c.data == 'buy_walls':
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                    text='–ü–æ–∫—É–ø–∫–∞ 5 –ø–æ—Å—Ç–æ–≤üó∫\n\n—Ü–µ–Ω–∞: 75—Äüí∞', reply_markup=InlineKeyboardMarkup().add(
                InlineKeyboardButton('–ö—É–ø–∏—Ç—åüõí', callback_data='buy_wall')
            ))
    if c.data == 'buy_wall':
        walls = cursor.execute(f'''SELECT walls FROM user WHERE telegram_id={c.from_user.id}''').fetchone()[0]
        cursor.execute(f'''UPDATE user SET walls={walls + 5}''')
        conn.commit()
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                    text='–£—Å–ø–µ—à–Ω–æ!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–æ—Ç—É —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç –í–ö;')
    if c.data == 'nap_podderj':
        await bot.send_message(c.from_user.id, '\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è: ', reply_markup=
                                    InlineKeyboardMarkup().add(
                                        InlineKeyboardButton('–ñ–∞–ª–æ–±–∞üò°', callback_data='complaint')).add(
                                        InlineKeyboardButton('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µü§î', callback_data='sentence')).add(
                                        InlineKeyboardButton('–ü–æ–∂–µ–ª–∞–Ω–∏–µüçè', callback_data='pojelanie')
                                    ))

    if c.data == 'complaint':
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                    text='–ß–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –æ—Ç–∫—Ä—ã—ÇüÜò\n\n–ù–∞–ø–∏—à–∏—Ç–µ –∂–∞–ª–æ–±—É –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏: ')
        await Form.sos.set()
    if c.data == 'sentence':
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                    text='–ß–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –æ—Ç–∫—Ä—ã—ÇüÜò\n\n–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏: ')
        await Form.sos.set()
    if c.data == 'pojelanie':
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id,
                                    text='–ß–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –æ—Ç–∫—Ä—ã—ÇüÜò\n\n–ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–∂–µ–ª–∞–Ω–∏–µ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏: ')
        await Form.sos.set()
    if c.data == 'walls_prem':
        walls = cursor.execute(f'''SELECT walls FROM user WHERE telegram_id={c.from_user.id}''').fetchone()[0]
        if walls >= 5:
            await bot.send_message(c.from_user.id, '–û–±–º–µ–Ω 5 –ø–æ—Å—Ç–æ–≤ –Ω–∞ –æ—ã—á–Ω—ã–π –ø—Ä–µ–ºüéÅ', reply_markup=
                                   InlineKeyboardMarkup().add(
                                       InlineKeyboardButton('–û–±–º–µ–Ω—è—Ç—å‚ñ∂', callback_data='obmen_walls_post')
                                   ))
        else:
            await bot.send_message(c.from_user.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ—Å—Ç–æ–≤‚ùó\n–ú–∏–Ω–∏–º—É–º 5‚ùó')
    if c.data == 'obmen_walls_post':
        walls = cursor.execute(f'''SELECT walls FROM user WHERE telegram_id={c.from_user.id}''').fetchone()[0]
        await bot.edit_message_text(chat_id=c.from_user.id, message_id=c.message.message_id, text='–í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–º–µ–Ω—è–ª–∏ 5 –ø–æ—Å—Ç–æ–≤ –Ω–∞ –æ–±—ã—á–Ω—ã–π –ø—Ä–µ–º!')
        cursor.execute(f'''UPDATE user SET walls={walls - 5}, subscription=1 WHERE telegram_id={c.from_user.id}''')
        await asyncio.sleep(1)
        await bot.delete_message(chat_id=c.from_user.id, message_id=c.message.message_id)
        conn.commit()
    if c.data == 'results':

        ids = cursor.execute(f'''SELECT telegram_id FROM user''').fetchall()
        result = []
        try:
            for i in range(len(ids)):
                    concurs_status = \
                        cursor.execute(f'''SELECT concurses FROM user WHERE telegram_id={ids[i][0]}''').fetchone()[
                            0]
                    if concurs_status == 1:
                        result.append(ids[i][0])
            cursor.execute(f'''UPDATE user SET concurses=0''')
            conn.commit()
            result = random.choice(result)
            await bot.send_message(result, '–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫—ÉüéÅ', reply_markup=
                                   InlineKeyboardMarkup().add(
                                       InlineKeyboardButton('–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—åüëë', callback_data='free_premium')
                                   ))


        except:
            pass
    await bot.answer_callback_query(callback_query_id=c.id, text='')


@dp.message_handler(state=Form.sos)
async def sos(ms: types.Message, state: FSMContext):
    await ms.answer('–í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º‚úÖ‚è≠')
    await bot.send_message(admins[0], '‚ùó–°–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: ' + ms.text, reply_markup=InlineKeyboardMarkup().add(
        InlineKeyboardButton('–ø—Ä–∏–Ω—è—Ç—å‚úÖ', callback_data='enter_predloj')
    ).add(
        InlineKeyboardButton('–æ—Ç–∫–ª–æ–Ω–∏—Ç—å‚ùå', callback_data='noenter_predloj')
    ))
    await state.finish()

@dp.edited_message_handler()
@dp.message_handler()
async def edit(ms: types.Message):
    await bot.delete_message(chat_id=ms.from_user.id, message_id=ms.message_id)


if __name__ == '__main__':
    executor.start_polling(dp)